{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for SUT SE 2563",
        "title": "SUT FINAL PROJECT Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/appointments": {
            "post": {
                "description": "Create appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create appointment",
                "operationId": "create-appointment",
                "parameters": [
                    {
                        "description": "Appointment entity",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Appointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/appointments/list/{id}": {
            "get": {
                "description": "list appointment entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List appointment entities",
                "operationId": "list-appointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Appointment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/appointments/{id}": {
            "get": {
                "description": "get appointment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a appointment entity by ID",
                "operationId": "get-appointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update appointment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a appointment entity by ID",
                "operationId": "update-appointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Appointment entity",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Appointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get appointment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a appointment entity by ID",
                "operationId": "delete-appointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/certifications": {
            "get": {
                "description": "list certification entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List certification entities",
                "operationId": "list-certification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Certification"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create certification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create certification",
                "operationId": "create-certification",
                "parameters": [
                    {
                        "description": "Certification entity",
                        "name": "certification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Certification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Certification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/certifications/{id}": {
            "get": {
                "description": "get certification by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a certification entity by ID",
                "operationId": "get-certification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Certification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Certification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update certification by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a certification entity by ID",
                "operationId": "update-certification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Certification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Certification entity",
                        "name": "certification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Certification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Certification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get certification by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a certification entity by ID",
                "operationId": "delete-certification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Certification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/chats": {
            "post": {
                "description": "Create chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create chat",
                "operationId": "create-chat",
                "parameters": [
                    {
                        "description": "Chat entity",
                        "name": "chat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Chat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Chat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/chats/chatroom/{id}": {
            "get": {
                "description": "get chat by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a chat entity by ID",
                "operationId": "get-chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Chat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/chats/{id}": {
            "get": {
                "description": "list chat entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List chat entities",
                "operationId": "list-chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Chat"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update chat by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a chat entity by ID",
                "operationId": "update-chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Chat entity",
                        "name": "chat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Chat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Chat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get chat by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a chat entity by ID",
                "operationId": "delete-chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/departments": {
            "get": {
                "description": "list department entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List department entities",
                "operationId": "list-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Department"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create department",
                "operationId": "create-department",
                "parameters": [
                    {
                        "description": "Department entity",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/departments/{id}": {
            "get": {
                "description": "get department by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a department entity by ID",
                "operationId": "get-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update department by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a department entity by ID",
                "operationId": "update-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Department entity",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get department by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a department entity by ID",
                "operationId": "delete-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/diseases": {
            "get": {
                "description": "list disease entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List disease entities",
                "operationId": "list-disease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Disease"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create disease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create disease",
                "operationId": "create-disease",
                "parameters": [
                    {
                        "description": "Disease entity",
                        "name": "disease",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/diseases/{id}": {
            "get": {
                "description": "get disease by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a disease entity by ID",
                "operationId": "get-disease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Disease ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update disease by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a disease entity by ID",
                "operationId": "update-disease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Disease ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disease entity",
                        "name": "disease",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get disease by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a disease entity by ID",
                "operationId": "delete-disease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Disease ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/hospitals": {
            "get": {
                "description": "list hospital entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List hospital entities",
                "operationId": "list-hospital",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Hospital"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create hospital",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create hospital",
                "operationId": "create-hospital",
                "parameters": [
                    {
                        "description": "Hospital entity",
                        "name": "hospital",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Hospital"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Hospital"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/hospitals/{id}": {
            "get": {
                "description": "get hospital by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a hospital entity by ID",
                "operationId": "get-hospital",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hospital ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Hospital"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update hospital by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a hospital entity by ID",
                "operationId": "update-hospital",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hospital ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hospital entity",
                        "name": "hospital",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Hospital"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Hospital"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get hospital by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a hospital entity by ID",
                "operationId": "delete-hospital",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hospital ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "description": "list message entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List message entities",
                "operationId": "list-message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Message"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create message",
                "operationId": "create-message",
                "parameters": [
                    {
                        "description": "Message entity",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/messages/{id}": {
            "get": {
                "description": "get message by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a message entity by ID",
                "operationId": "get-message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update message by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a message entity by ID",
                "operationId": "update-message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message entity",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get message by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a message entity by ID",
                "operationId": "delete-message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Message ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "description": "list notification entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List notification entities",
                "operationId": "list-notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Notification"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create notification",
                "operationId": "create-notification",
                "parameters": [
                    {
                        "description": "Notification entity",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Notification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/notifications/{id}": {
            "get": {
                "description": "get notification by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a notification entity by ID",
                "operationId": "get-notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update notification by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a notification entity by ID",
                "operationId": "update-notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notification entity",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Notification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get notification by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a notification entity by ID",
                "operationId": "delete-notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/pinfos": {
            "get": {
                "description": "list pinfo entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List pinfo entities",
                "operationId": "list-pinfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.PInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create pinfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create pinfo",
                "operationId": "create-pinfo",
                "parameters": [
                    {
                        "description": "PInfo entity",
                        "name": "pinfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.PInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.PInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/pinfos/{id}": {
            "get": {
                "description": "get pinfo by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a pinfo entity by ID",
                "operationId": "get-pinfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PInfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.PInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update pinfo by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a pinfo entity by ID",
                "operationId": "update-pinfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PInfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PInfo entity",
                        "name": "pinfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.PInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.PInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get pinfo by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a pinfo entity by ID",
                "operationId": "delete-pinfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PInfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "description": "list role entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List role entities",
                "operationId": "list-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Role"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create role",
                "operationId": "create-role",
                "parameters": [
                    {
                        "description": "Role entity",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "description": "get role by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a role entity by ID",
                "operationId": "get-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update role by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a role entity by ID",
                "operationId": "update-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role entity",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get role by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a role entity by ID",
                "operationId": "delete-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/schedules": {
            "get": {
                "description": "list schedule entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List schedule entities",
                "operationId": "list-schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Schedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create schedule",
                "operationId": "create-schedule",
                "parameters": [
                    {
                        "description": "Schedule entity",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Schedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/schedules/{id}": {
            "get": {
                "description": "get schedule by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a schedule entity by ID",
                "operationId": "get-schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Schedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update schedule by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a schedule entity by ID",
                "operationId": "update-schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schedule entity",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Schedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get schedule by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a schedule entity by ID",
                "operationId": "delete-schedule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/telecoms": {
            "get": {
                "description": "list telecom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List telecom entities",
                "operationId": "list-telecom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Telecom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create telecom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create telecom",
                "operationId": "create-telecom",
                "parameters": [
                    {
                        "description": "Telecom entity",
                        "name": "telecom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Telecom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Telecom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/telecoms/{id}": {
            "get": {
                "description": "get telecom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a telecom entity by ID",
                "operationId": "get-telecom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Telecom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Telecom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update telecom by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a telecom entity by ID",
                "operationId": "update-telecom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Telecom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Telecom entity",
                        "name": "telecom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Telecom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Telecom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get telecom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a telecom entity by ID",
                "operationId": "delete-telecom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Telecom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/tokens": {
            "get": {
                "description": "list token entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List token entities",
                "operationId": "list-token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Token"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create token",
                "operationId": "create-token",
                "parameters": [
                    {
                        "description": "Token entity",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Token"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/tokens/{auth_token}": {
            "get": {
                "description": "get token by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a token entity by ID",
                "operationId": "get-token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Token ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Token"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Check token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Check token",
                "operationId": "check-token",
                "parameters": [
                    {
                        "description": "Token entity",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Token"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/tokens/{id}": {
            "put": {
                "description": "update token by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a token entity by ID",
                "operationId": "update-token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Token ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Token entity",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Token"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get token by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a token entity by ID",
                "operationId": "delete-token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Token ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/treatments": {
            "get": {
                "description": "list treatment entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List treatment entities",
                "operationId": "list-treatment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Treatment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create treatment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create treatment",
                "operationId": "create-treatment",
                "parameters": [
                    {
                        "description": "Treatment entity",
                        "name": "treatment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Treatment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Treatment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/treatments/{id}": {
            "get": {
                "description": "get treatment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a treatment entity by ID",
                "operationId": "get-treatment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Treatment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Treatment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update treatment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a treatment entity by ID",
                "operationId": "update-treatment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Treatment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Treatment entity",
                        "name": "treatment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Treatment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Treatment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get treatment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a treatment entity by ID",
                "operationId": "delete-treatment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Treatment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create user",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "User entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/getDepartment/{id}": {
            "get": {
                "description": "list user entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List user entities",
                "operationId": "list-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "get user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a user entity by ID",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a user entity by ID",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a user entity by ID",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/{username}": {
            "post": {
                "description": "get user by Username",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a user entity by Username",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ent.Appointment": {
            "type": "object",
            "properties": {
                "DoctorId": {
                    "description": "DoctorId holds the value of the \"DoctorId\" field.",
                    "type": "integer"
                },
                "UserId": {
                    "description": "UserId holds the value of the \"UserId\" field.",
                    "type": "integer"
                },
                "detail": {
                    "description": "Detail holds the value of the \"detail\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the AppointmentQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.AppointmentEdges"
                },
                "endTime": {
                    "description": "EndTime holds the value of the \"endTime\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "reasonForAppointment": {
                    "description": "ReasonForAppointment holds the value of the \"reasonForAppointment\" field.",
                    "type": "string"
                },
                "startTime": {
                    "description": "StartTime holds the value of the \"startTime\" field.",
                    "type": "string"
                },
                "status": {
                    "description": "Status holds the value of the \"status\" field.",
                    "type": "string"
                }
            }
        },
        "ent.AppointmentEdges": {
            "type": "object",
            "properties": {
                "appointment_chat": {
                    "description": "AppointmentChat holds the value of the appointment_chat edge.",
                    "$ref": "#/definitions/ent.Chat"
                },
                "appointment_schedule": {
                    "description": "AppointmentSchedule holds the value of the appointment_schedule edge.",
                    "$ref": "#/definitions/ent.Schedule"
                }
            }
        },
        "ent.Certification": {
            "type": "object",
            "properties": {
                "Issuer": {
                    "description": "Issuer holds the value of the \"Issuer\" field.",
                    "type": "string"
                },
                "code": {
                    "description": "Code holds the value of the \"code\" field.",
                    "type": "string"
                },
                "dateOfExp": {
                    "description": "DateOfExp holds the value of the \"dateOfExp\" field.",
                    "type": "string"
                },
                "dateOfIssuing": {
                    "description": "DateOfIssuing holds the value of the \"dateOfIssuing\" field.",
                    "type": "string"
                },
                "diloma": {
                    "description": "Diloma holds the value of the \"diloma\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CertificationQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.CertificationEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.CertificationEdges": {
            "type": "object",
            "properties": {
                "doctor_owner": {
                    "description": "DoctorOwner holds the value of the doctor_owner edge.",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Chat": {
            "type": "object",
            "properties": {
                "Chat_room_name": {
                    "description": "ChatRoomName holds the value of the \"Chat_room_name\" field.",
                    "type": "string"
                },
                "IsLockChat": {
                    "description": "IsLockChat holds the value of the \"IsLockChat\" field.",
                    "type": "boolean"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ChatQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.ChatEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ChatEdges": {
            "type": "object",
            "properties": {
                "chat_appointment": {
                    "description": "ChatAppointment holds the value of the chat_appointment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Appointment"
                    }
                },
                "chat_message": {
                    "description": "ChatMessage holds the value of the chat_message edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Message"
                    }
                },
                "chat_user": {
                    "description": "ChatUser holds the value of the chat_user edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Department": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DepartmentQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.DepartmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "image": {
                    "description": "Image holds the value of the \"image\" field.",
                    "type": "string"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.DepartmentEdges": {
            "type": "object",
            "properties": {
                "department_has_doctor": {
                    "description": "DepartmentHasDoctor holds the value of the department_has_doctor edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Disease": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DiseaseQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.DiseaseEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "symtoms": {
                    "description": "Symtoms holds the value of the \"symtoms\" field.",
                    "type": "string"
                }
            }
        },
        "ent.DiseaseEdges": {
            "type": "object",
            "properties": {
                "disease_user": {
                    "description": "DiseaseUser holds the value of the disease_user edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Hospital": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the HospitalQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.HospitalEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.HospitalEdges": {
            "type": "object",
            "properties": {
                "hospital_has_doctor": {
                    "description": "HospitalHasDoctor holds the value of the hospital_has_doctor edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Message": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the MessageQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.MessageEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "message_text": {
                    "description": "MessageText holds the value of the \"message_text\" field.",
                    "type": "string"
                },
                "sent_dateTime": {
                    "description": "SentDateTime holds the value of the \"sent_dateTime\" field.",
                    "type": "string"
                }
            }
        },
        "ent.MessageEdges": {
            "type": "object",
            "properties": {
                "What_messages_are_in_this_chat": {
                    "description": "WhatMessagesAreInThisChat holds the value of the What_messages_are_in_this_chat edge.",
                    "$ref": "#/definitions/ent.Chat"
                },
                "Who_send_messages": {
                    "description": "WhoSendMessages holds the value of the Who_send_messages edge.",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Notification": {
            "type": "object",
            "properties": {
                "AppointmentId": {
                    "description": "AppointmentId holds the value of the \"AppointmentId\" field.",
                    "type": "integer"
                },
                "CreatedDate": {
                    "description": "CreatedDate holds the value of the \"CreatedDate\" field.",
                    "type": "string"
                },
                "Message": {
                    "description": "Message holds the value of the \"Message\" field.",
                    "type": "string"
                },
                "RecipientId": {
                    "description": "RecipientId holds the value of the \"RecipientId\" field.",
                    "type": "integer"
                },
                "SenderId": {
                    "description": "SenderId holds the value of the \"SenderId\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the NotificationQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.NotificationEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.NotificationEdges": {
            "type": "object",
            "properties": {
                "user_notification": {
                    "description": "UserNotification holds the value of the user_notification edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.PInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address holds the value of the \"address\" field.",
                    "type": "string"
                },
                "bloodGroup": {
                    "description": "BloodGroup holds the value of the \"bloodGroup\" field.",
                    "type": "string"
                },
                "brithDate": {
                    "description": "BrithDate holds the value of the \"brithDate\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PInfoQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.PInfoEdges"
                },
                "firstName": {
                    "description": "FirstName holds the value of the \"firstName\" field.",
                    "type": "string"
                },
                "gender": {
                    "description": "Gender holds the value of the \"gender\" field.",
                    "type": "integer"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "idCardNumber": {
                    "description": "IdCardNumber holds the value of the \"idCardNumber\" field.",
                    "type": "string"
                },
                "lastName": {
                    "description": "LastName holds the value of the \"lastName\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PInfoEdges": {
            "type": "object",
            "properties": {
                "who_is_the_owner_of_this_PInfo": {
                    "description": "WhoIsTheOwnerOfThisPInfo holds the value of the who_is_the_owner_of_this_PInfo edge.",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Role": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoleQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.RoleEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.RoleEdges": {
            "type": "object",
            "properties": {
                "role_user": {
                    "description": "RoleUser holds the value of the role_user edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Schedule": {
            "type": "object",
            "properties": {
                "activity": {
                    "description": "Activity holds the value of the \"activity\" field.",
                    "type": "string"
                },
                "detail": {
                    "description": "Detail holds the value of the \"detail\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ScheduleQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.ScheduleEdges"
                },
                "endTime": {
                    "description": "EndTime holds the value of the \"endTime\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "startTime": {
                    "description": "StartTime holds the value of the \"startTime\" field.",
                    "type": "string"
                },
                "status": {
                    "description": "Status holds the value of the \"status\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ScheduleEdges": {
            "type": "object",
            "properties": {
                "schedule_appointment": {
                    "description": "ScheduleAppointment holds the value of the schedule_appointment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Appointment"
                    }
                },
                "schedule_doctor": {
                    "description": "ScheduleDoctor holds the value of the schedule_doctor edge.",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Telecom": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the TelecomQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.TelecomEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "platform": {
                    "description": "Platform holds the value of the \"platform\" field.",
                    "type": "string"
                },
                "telephone": {
                    "description": "Telephone holds the value of the \"telephone\" field.",
                    "type": "string"
                },
                "username": {
                    "description": "Username holds the value of the \"username\" field.",
                    "type": "string"
                }
            }
        },
        "ent.TelecomEdges": {
            "type": "object",
            "properties": {
                "who_is_the_owner_of_this_telecom": {
                    "description": "WhoIsTheOwnerOfThisTelecom holds the value of the who_is_the_owner_of_this_telecom edge.",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Token": {
            "type": "object",
            "properties": {
                "AuthToken": {
                    "description": "AuthToken holds the value of the \"AuthToken\" field.",
                    "type": "string"
                },
                "ExpiresAt": {
                    "description": "ExpiresAt holds the value of the \"ExpiresAt\" field.",
                    "type": "string"
                },
                "GeneratedAt": {
                    "description": "GeneratedAt holds the value of the \"GeneratedAt\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the TokenQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.TokenEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.TokenEdges": {
            "type": "object",
            "properties": {
                "authentication_token": {
                    "description": "AuthenticationToken holds the value of the authentication_token edge.",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Treatment": {
            "type": "object",
            "properties": {
                "dateTime": {
                    "description": "DateTime holds the value of the \"dateTime\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the TreatmentQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.TreatmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "takeTime": {
                    "description": "TakeTime holds the value of the \"takeTime\" field.",
                    "type": "number"
                },
                "treatmentRecord": {
                    "description": "TreatmentRecord holds the value of the \"treatmentRecord\" field.",
                    "type": "string"
                }
            }
        },
        "ent.TreatmentEdges": {
            "type": "object",
            "properties": {
                "treatment_was_recorded_by_doctor": {
                    "description": "TreatmentWasRecordedByDoctor holds the value of the treatment_was_recorded_by_doctor edge.",
                    "$ref": "#/definitions/ent.User"
                },
                "user_is_the_treatment_of_record": {
                    "description": "UserIsTheTreatmentOfRecord holds the value of the user_is_the_treatment_of_record edge.",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.User": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the UserQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.UserEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                },
                "username": {
                    "description": "Username holds the value of the \"username\" field.",
                    "type": "string"
                }
            }
        },
        "ent.UserEdges": {
            "type": "object",
            "properties": {
                "doctor_has_certification": {
                    "description": "DoctorHasCertification holds the value of the doctor_has_certification edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Certification"
                    }
                },
                "doctor_record_treatment": {
                    "description": "DoctorRecordTreatment holds the value of the doctor_record_treatment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Treatment"
                    }
                },
                "doctor_schedule": {
                    "description": "DoctorSchedule holds the value of the doctor_schedule edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Schedule"
                    }
                },
                "from_hospital": {
                    "description": "FromHospital holds the value of the from_hospital edge.",
                    "$ref": "#/definitions/ent.Hospital"
                },
                "has_department": {
                    "description": "HasDepartment holds the value of the has_department edge.",
                    "$ref": "#/definitions/ent.Department"
                },
                "user_has_PInfo": {
                    "description": "UserHasPInfo holds the value of the user_has_PInfo edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PInfo"
                    }
                },
                "user_have_disease": {
                    "description": "UserHaveDisease holds the value of the user_have_disease edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Disease"
                    }
                },
                "user_have_role": {
                    "description": "UserHaveRole holds the value of the user_have_role edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Role"
                    }
                },
                "user_have_telecoms": {
                    "description": "UserHaveTelecoms holds the value of the user_have_telecoms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Telecom"
                    }
                },
                "user_have_token": {
                    "description": "UserHaveToken holds the value of the user_have_token edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Token"
                    }
                },
                "user_have_treatment": {
                    "description": "UserHaveTreatment holds the value of the user_have_treatment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Treatment"
                    }
                },
                "user_send_message": {
                    "description": "UserSendMessage holds the value of the user_send_message edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Message"
                    }
                },
                "user_send_notification": {
                    "description": "UserSendNotification holds the value of the user_send_notification edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Notification"
                    }
                },
                "who_is_in_this_chat": {
                    "description": "WhoIsInThisChat holds the value of the who_is_in_this_chat edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Chat"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}