// Code generated by entc, DO NOT EDIT.

package message

const (
	// Label holds the string label denoting the message type in the database.
	Label = "message"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMessageText holds the string denoting the message_text field in the database.
	FieldMessageText = "message_text"
	// FieldSentDateTime holds the string denoting the sent_datetime field in the database.
	FieldSentDateTime = "sent_date_time"
	// EdgeWhatMessagesAreInThisChat holds the string denoting the what_messages_are_in_this_chat edge name in mutations.
	EdgeWhatMessagesAreInThisChat = "What_messages_are_in_this_chat"
	// EdgeWhoSendMessages holds the string denoting the who_send_messages edge name in mutations.
	EdgeWhoSendMessages = "Who_send_messages"
	// Table holds the table name of the message in the database.
	Table = "messages"
	// WhatMessagesAreInThisChatTable is the table that holds the What_messages_are_in_this_chat relation/edge.
	WhatMessagesAreInThisChatTable = "messages"
	// WhatMessagesAreInThisChatInverseTable is the table name for the Chat entity.
	// It exists in this package in order to avoid circular dependency with the "chat" package.
	WhatMessagesAreInThisChatInverseTable = "chats"
	// WhatMessagesAreInThisChatColumn is the table column denoting the What_messages_are_in_this_chat relation/edge.
	WhatMessagesAreInThisChatColumn = "chat_chat_message"
	// WhoSendMessagesTable is the table that holds the Who_send_messages relation/edge.
	WhoSendMessagesTable = "messages"
	// WhoSendMessagesInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	WhoSendMessagesInverseTable = "users"
	// WhoSendMessagesColumn is the table column denoting the Who_send_messages relation/edge.
	WhoSendMessagesColumn = "user_user_send_message"
)

// Columns holds all SQL columns for message fields.
var Columns = []string{
	FieldID,
	FieldMessageText,
	FieldSentDateTime,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "messages"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"chat_chat_message",
	"user_user_send_message",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
