// Code generated by entc, DO NOT EDIT.

package schedule

const (
	// Label holds the string label denoting the schedule type in the database.
	Label = "schedule"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldActivity holds the string denoting the activity field in the database.
	FieldActivity = "activity"
	// FieldDetail holds the string denoting the detail field in the database.
	FieldDetail = "detail"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// EdgeTimeSchedule holds the string denoting the time_schedule edge name in mutations.
	EdgeTimeSchedule = "time_schedule"
	// EdgeWhoIsTheOwnerOfThisSchedule holds the string denoting the who_is_the_owner_of_this_schedule edge name in mutations.
	EdgeWhoIsTheOwnerOfThisSchedule = "who_is_the_owner_of_this_schedule"
	// Table holds the table name of the schedule in the database.
	Table = "schedules"
	// TimeScheduleTable is the table that holds the time_schedule relation/edge.
	TimeScheduleTable = "schedule_times"
	// TimeScheduleInverseTable is the table name for the ScheduleTime entity.
	// It exists in this package in order to avoid circular dependency with the "scheduletime" package.
	TimeScheduleInverseTable = "schedule_times"
	// TimeScheduleColumn is the table column denoting the time_schedule relation/edge.
	TimeScheduleColumn = "schedule_time_schedule"
	// WhoIsTheOwnerOfThisScheduleTable is the table that holds the who_is_the_owner_of_this_schedule relation/edge.
	WhoIsTheOwnerOfThisScheduleTable = "schedules"
	// WhoIsTheOwnerOfThisScheduleInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	WhoIsTheOwnerOfThisScheduleInverseTable = "users"
	// WhoIsTheOwnerOfThisScheduleColumn is the table column denoting the who_is_the_owner_of_this_schedule relation/edge.
	WhoIsTheOwnerOfThisScheduleColumn = "user_doctor_has_schedule"
)

// Columns holds all SQL columns for schedule fields.
var Columns = []string{
	FieldID,
	FieldActivity,
	FieldDetail,
	FieldStatus,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "schedules"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_doctor_has_schedule",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// StatusValidator is a validator for the "status" field. It is called by the builders before save.
	StatusValidator func(string) error
)
