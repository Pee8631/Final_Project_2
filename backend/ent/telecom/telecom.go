// Code generated by entc, DO NOT EDIT.

package telecom

const (
	// Label holds the string label denoting the telecom type in the database.
	Label = "telecom"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldPlatform holds the string denoting the platform field in the database.
	FieldPlatform = "platform"
	// EdgeWhoIsTheOwnerOfThisTelecom holds the string denoting the who_is_the_owner_of_this_telecom edge name in mutations.
	EdgeWhoIsTheOwnerOfThisTelecom = "who_is_the_owner_of_this_telecom"
	// Table holds the table name of the telecom in the database.
	Table = "telecoms"
	// WhoIsTheOwnerOfThisTelecomTable is the table that holds the who_is_the_owner_of_this_telecom relation/edge.
	WhoIsTheOwnerOfThisTelecomTable = "telecoms"
	// WhoIsTheOwnerOfThisTelecomInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	WhoIsTheOwnerOfThisTelecomInverseTable = "users"
	// WhoIsTheOwnerOfThisTelecomColumn is the table column denoting the who_is_the_owner_of_this_telecom relation/edge.
	WhoIsTheOwnerOfThisTelecomColumn = "user_user_have_telecoms"
)

// Columns holds all SQL columns for telecom fields.
var Columns = []string{
	FieldID,
	FieldUsername,
	FieldPlatform,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "telecoms"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_user_have_telecoms",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	UsernameValidator func(string) error
	// PlatformValidator is a validator for the "platform" field. It is called by the builders before save.
	PlatformValidator func(string) error
)
