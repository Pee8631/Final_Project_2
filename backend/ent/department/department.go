// Code generated by entc, DO NOT EDIT.

package department

const (
	// Label holds the string label denoting the department type in the database.
	Label = "department"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeDepartmentHasDoctor holds the string denoting the department_has_doctor edge name in mutations.
	EdgeDepartmentHasDoctor = "department_has_doctor"
	// Table holds the table name of the department in the database.
	Table = "departments"
	// DepartmentHasDoctorTable is the table that holds the department_has_doctor relation/edge.
	DepartmentHasDoctorTable = "users"
	// DepartmentHasDoctorInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	DepartmentHasDoctorInverseTable = "users"
	// DepartmentHasDoctorColumn is the table column denoting the department_has_doctor relation/edge.
	DepartmentHasDoctorColumn = "department_department_has_doctor"
)

// Columns holds all SQL columns for department fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
