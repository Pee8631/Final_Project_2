// Code generated by entc, DO NOT EDIT.

package chatting

const (
	// Label holds the string label denoting the chatting type in the database.
	Label = "chatting"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMessage holds the string denoting the message field in the database.
	FieldMessage = "message"
	// FieldDateTime holds the string denoting the datetime field in the database.
	FieldDateTime = "date_time"
	// EdgeChattingWithWhom holds the string denoting the chatting_with_whom edge name in mutations.
	EdgeChattingWithWhom = "chatting_with_whom"
	// EdgeWhoseIsThisMsg holds the string denoting the whose_is_this_msg edge name in mutations.
	EdgeWhoseIsThisMsg = "whose_is_this_msg"
	// Table holds the table name of the chatting in the database.
	Table = "chattings"
	// ChattingWithWhomTable is the table that holds the chatting_with_whom relation/edge.
	ChattingWithWhomTable = "chattings"
	// ChattingWithWhomInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	ChattingWithWhomInverseTable = "users"
	// ChattingWithWhomColumn is the table column denoting the chatting_with_whom relation/edge.
	ChattingWithWhomColumn = "user_user_chatting_with_whom"
	// WhoseIsThisMsgTable is the table that holds the whose_is_this_msg relation/edge.
	WhoseIsThisMsgTable = "chattings"
	// WhoseIsThisMsgInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	WhoseIsThisMsgInverseTable = "users"
	// WhoseIsThisMsgColumn is the table column denoting the whose_is_this_msg relation/edge.
	WhoseIsThisMsgColumn = "user_who_is_owner_this_msg"
)

// Columns holds all SQL columns for chatting fields.
var Columns = []string{
	FieldID,
	FieldMessage,
	FieldDateTime,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "chattings"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_user_chatting_with_whom",
	"user_who_is_owner_this_msg",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
